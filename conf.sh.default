#!/usr/bin/env bash
# extended rhoerbe/docker-template@github 2016-07-11

dockervol_root='/docker_volumes'

# configure container
export IMGID='06'  # range from 02 .. 99; must be unique
export IMAGENAME="r2h2/openldap${IMGID}"
export CONTAINERNAME="${IMGID}openldap"
export CONTAINERUSER="slapd${IMGID}"   # group and user to run container
export CONTAINERUID="80${IMGID}"   # gid and uid for CONTAINERUSER
export SLAPDPORT=8389
export BUILDARGS="
    --build-arg SLAPDPORT=$SLAPDPORT \
    --build-arg USERNAME=$CONTAINERUSER \
    --build-arg UID=$CONTAINERUID \
"
export ENVSETTINGS="
    -e SLAPDPORT=$SLAPDPORT
    -e ROOTPW=changeit
    -e USERNAME=$CONTAINERUSER
"
export NETWORKSETTINGS="
    --log-driver=syslog --log-opt syslog-facility=daemon --log-opt syslog-tag=slapd
    --net dockernet
    --ip 10.1.1.${IMGID}
"
export VOLROOT="${dockervol_root}/$CONTAINERNAME"  # container volumes on docker host
export VOLMAPPING="
    -v $VOLROOT/etc/openldap/:/etc/openldap/:Z
    -v $VOLROOT/var/db:/var/db/:Z
    -v $VOLROOT/var/log/:/var/log/:Z
"
export STARTCMD='/start.sh'

# first create user/group/host directories if not existing
# first start: create user/group/host directories
if [ $(id -u) -ne 0 ]; then
    sudo="sudo"
fi
if ! id -u $CONTAINERUSER &>/dev/null; then
    $sudo groupadd -g $CONTAINERUID $CONTAINERUSER
    $sudo adduser --gid $CONTAINERUID -M --uid $CONTAINERUID $CONTAINERUSER  #CentOS
    #$sudo adduser --gid $CONTAINERUID --disabled-password --no-create-home --gecos "" --uid $CONTAINERUID $CONTAINERUSER #Debian
fi

# create dir with given user if not existing, relative to $HOSTVOLROOT; set/repair ownership
function chkdir() {
    dir=$1; user=$2
    $sudo mkdir -p "$VOLROOT/$dir"
    $sudo chown -R $user:$user "$VOLROOT/$dir"
}
chkdir etc/openldap $CONTAINERUSER
chkdir var/db $CONTAINERUSER
chkdir var/log $CONTAINERUSER
